"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import logging
import os
from pathlib import Path

from dotenv import load_dotenv

from main.utils import DjangoVersionManager, convert_str_to_bool

lg = logging.getLogger("django")
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
LOGFILE_NAME = "django-partyapp.log"
APP_LOCAL_TEMP_DIR = BASE_DIR / "app_local_temp"
APP_LOCAL_TEMP_DIR.mkdir(parents=True, exist_ok=True)

try:
    # This command fetches the latest tag from the git repository
    # and uses it as the version number to be used in the application.
    WEBAPP_VERSION = DjangoVersionManager().get_app_version(refresh=False)
except Exception as e:
    print(f"{e};")
    print("uninitialized git repository, initializing...")
    dvm = DjangoVersionManager()
    WEBAPP_VERSION = dvm.get_app_version(refresh=True)

LOGFILE_FILEPATH = BASE_DIR / APP_LOCAL_TEMP_DIR / "logs" / f"{LOGFILE_NAME}"
LOGFILE_FILEPATH.parent.mkdir(parents=True, exist_ok=True)
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "file": {
            # "level": "DEBUG",
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": f"{LOGFILE_FILEPATH.absolute()}",
        },
        "console": {
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file", "console"],
            "level": "DEBUG",
            "propagate": True,
        },
    },
}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = convert_str_to_bool(os.environ.get("DJANGO_DEBUG", "false"))

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # third-party
    "crispy_forms",
    "crispy_bootstrap5",
    "django_bootstrap5",
    "django_tables2",
    "django_select2",
    # our apps
    "accounts",
    "durian",
    "bingo",
    "obstacle",
    "controls",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "main.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # "DIRS": [],
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "main.context_processors.get_sw_version",
                "main.context_processors.get_company_info",
                "main.context_processors.is_development_environment",
            ],
        },
    },
]

WSGI_APPLICATION = "main.wsgi.application"
IS_DEVELOPMENT_ENV = convert_str_to_bool(os.environ.get("IS_DEVELOPMENT_ENV", "false"))

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

SQLITE_DB_PATH = APP_LOCAL_TEMP_DIR / "database" / "db.sqlite3"
SQLITE_DB_PATH.parent.mkdir(parents=True, exist_ok=True)
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": SQLITE_DB_PATH,
    }
}
# TODO: ignore `app_local_tmp`, and add employee_data there

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Custom configurations
AUTH_USER_MODEL = "accounts.CustomUser"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "landingpage"
AUTHENTICATION_BACKENDS = ["accounts.backends.CustomBackend"]
# AUTHENTICATION_BACKENDS = ["accounts.backends.NoPasswordBackend"]
EMAIL_FAIL_SILENTLY = True
DEFAULT_USER_PASSWORD = os.environ.get(
    "DJANGO_DEFAULT_USER_PASSWORD", r"z7SYNT6&xqx$axQzM!JJ&x"
)
# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Asia/Singapore"
USE_I18N = True
USE_TZ = True
SHORT_DATE_FORMAT = "Y-m-d"
SHORT_DATETIME_FORMAT = "Y-m-d HM"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_URL = os.environ.get("DJANGO_STATIC_URL", "static/")
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = os.environ.get("DJANGO_STATIC_ROOT", "")
MEDIA_URL = os.environ.get("DJANGO_MEDIA_URL", "media/")
MEDIA_ROOT = os.environ.get("DJANGO_MEDIA_ROOT", "")


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Extensions required
DJANGO_TABLES2_TEMPLATE = "django_tables2/bootstrap5.html"
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"


# Company information
INFO_COMPANY_NAME = os.environ.get("INFO_COMPANY_NAME", "MyEngineeringFirm")
INFO_COMPANY_DEPARTMENT = os.environ.get(
    "INFO_COMPANY_DEPARTMENT", "Research and Development Department"
)
INFO_COMPANY_COMMITTEE = os.environ.get(
    "INFO_COMPANY_COMMITTEE", "Durian Party Organistion Committee"
)
